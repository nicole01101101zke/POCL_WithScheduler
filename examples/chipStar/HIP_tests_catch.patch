diff --git a/tests/catch/CMakeLists.txt b/tests/catch/CMakeLists.txt
index 8585ec6f..330256b6 100644
--- a/HIP/tests/catch/CMakeLists.txt
+++ b/HIP/tests/catch/CMakeLists.txt
@@ -39,10 +39,7 @@ if(NOT DEFINED ROCM_PATH)
     if(DEFINED ENV{ROCM_PATH})
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE STRING "ROCM Path")
     else()
-        cmake_path(GET HIP_PATH PARENT_PATH ROCM_PATH)
-        if (NOT EXISTS "${ROCM_PATH}/bin/rocm_agent_enumerator")
-            set(ROCM_PATH "/opt/rocm/")
-        endif()
+        set(ROCM_PATH "/opt/rocm")
     endif()
 endif()
 file(TO_CMAKE_PATH "${ROCM_PATH}" ROCM_PATH)
@@ -135,8 +132,8 @@ set(ADD_SCRIPT_PATH ${CMAKE_CURRENT_BINARY_DIR}/${CATCH_BUILD_DIR}/script/CatchA
 
 if (WIN32)
   configure_file(catchProp_in_rc.in ${CMAKE_CURRENT_BINARY_DIR}/catchProp.rc @ONLY)
-  cmake_path(SET LLVM_RC_PATH "${HIP_PATH}/../lc/bin/llvm-rc.exe")
-  cmake_path(SET LLVM_RC_PATH NORMALIZE "${LLVM_RC_PATH}")
+#  cmake_path(SET LLVM_RC_PATH "${HIP_PATH}/../lc/bin/llvm-rc.exe")
+#  cmake_path(SET LLVM_RC_PATH NORMALIZE "${LLVM_RC_PATH}")
 
   # generates the .res files to be used by executables to populate the properties
   # expects LC folder with clang, llvm-rc to be present one level up of HIP
diff --git a/CMakeLists.txt b/CMakeLists.txt
index c8fd67be..105fe990 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -32,7 +32,7 @@ set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-duplicate-decl-specifier \
 -Wno-delete-abstract-non-virtual-dtor -Wno-deprecated-declarations -Wunused-command-line-argument")
 
 # end temporary
-cmake_minimum_required(VERSION 3.20 FATAL_ERROR)
+cmake_minimum_required(VERSION 3.16 FATAL_ERROR)
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
 
 project(chipStar
@@ -340,7 +340,7 @@ include(UnitTests)
 target_compile_definitions(
   CHIP PRIVATE ${HIP_ENABLE_SPIRV} ${CHIP_SPV_DEFINITIONS})
 
-target_link_libraries(CHIP INTERFACE ${CHIP_INTERFACE_LIBS})
+target_link_libraries(CHIP PUBLIC ${CHIP_INTERFACE_LIBS})
 
 if(HAS_EXPERIMENTAL_FILESYSTEM)
   target_link_libraries(CHIP PUBLIC stdc++fs)
diff --git a/cmake/OCL.cmake b/cmake/OCL.cmake
index 1c16782..2eaf44e 100644
--- a/bitcode/ROCm-Device-Libs/cmake/OCL.cmake
+++ b/bitcode/ROCm-Device-Libs/cmake/OCL.cmake
@@ -99,7 +99,7 @@ macro(opencl_bc_lib)
     if (fext STREQUAL ".cl")
       set(output "${CMAKE_CURRENT_BINARY_DIR}/${fname_we}${BC_EXT}")
       add_custom_command(OUTPUT "${output}"
-        COMMAND ${LLVM_CONFIG_DIR}/clang ${inc_options} ${CLANG_OCL_FLAGS}
+        COMMAND ${CLANG_ROOT_PATH_BIN}/clang ${inc_options} ${CLANG_OCL_FLAGS}
           -emit-llvm -Xclang -mlink-builtin-bitcode -Xclang "${irif_lib_output}"
           -c "${file}" -o "${output}"
         DEPENDS "${file}" "${irif_lib_output}" "${CLANG}"
@@ -130,12 +130,12 @@ macro(opencl_bc_lib)
 
   add_custom_command(OUTPUT ${OUTPUT_BC_LIB}
     # Link regular library dependencies
-    COMMAND ${LLVM_CONFIG_DIR}/llvm-link
+    COMMAND ${CLANG_ROOT_PATH_BIN}/llvm-link
       -o "${OUT_NAME}.link0${LIB_SUFFIX}" "@${OUT_NAME}_response"
     # Extra link step with internalize
-    COMMAND ${LLVM_CONFIG_DIR}/llvm-link -internalize -only-needed "${name}.link0${LIB_SUFFIX}"
+    COMMAND ${CLANG_ROOT_PATH_BIN}/llvm-link -internalize -only-needed "${name}.link0${LIB_SUFFIX}"
       -o "${OUT_NAME}${LIB_SUFFIX}" ${internal_link_libs}
-    COMMAND ${LLVM_CONFIG_DIR}/opt -passes=strip
+    COMMAND ${CLANG_ROOT_PATH_BIN}/opt -passes=strip
       -o "${OUT_NAME}${STRIP_SUFFIX}" "${OUT_NAME}${LIB_SUFFIX}"
     COMMAND "${PREPARE_BUILTINS}"
       -o ${OUTPUT_BC_LIB} "${OUT_NAME}${STRIP_SUFFIX}"
@@ -208,7 +208,7 @@ macro(clang_opencl_test name dir)
   clang_opencl_code(${name} ${dir} hip opencl ocml ockl ${OCLC_DEFAULT_LIBS})
   add_test(
     NAME ${name}:llvm-objdump
-    COMMAND ${LLVM_CONFIG_DIR}/llvm-objdump -disassemble -mcpu=fiji "${name}.co"
+    COMMAND ${CLANG_ROOT_PATH_BIN}/llvm-objdump -disassemble -mcpu=fiji "${name}.co"
   )
 endmacro()
 
